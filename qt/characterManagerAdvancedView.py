# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'characterManagerAdvancedView.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QSize

grey_background = "background-color: rgb(245, 245, 245);"
white_background = "background-color: rgb(255, 255, 255);"

class Ui_characterManagerAdvancedView(object):
    def setupUi(self, characterManagerAdvancedView):
        characterManagerAdvancedView.setObjectName("characterManagerAdvancedView")
        characterManagerAdvancedView.resize(893, 428)
        characterManagerAdvancedView.setMinimumSize(QtCore.QSize(893, 428))
        characterManagerAdvancedView.setMaximumSize(QtCore.QSize(893, 428))
        icon = QIcon()
        icon.addFile(u"images\maplestoryIcon.ico", QSize(), QIcon.Normal, QIcon.Off)
        characterManagerAdvancedView.setWindowIcon(icon)
        characterManagerAdvancedView.setStyleSheet(white_background)

        self.charLevelCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charLevelCheckbox.setGeometry(QtCore.QRect(20, 100, 70, 17))
        self.charLevelCheckbox.setObjectName("charLevelCheckbox")

        self.outputFirstConditional = QtWidgets.QLineEdit(characterManagerAdvancedView)
        self.outputFirstConditional.setGeometry(QtCore.QRect(180, 240, 113, 20))
        self.outputFirstConditional.setStyleSheet("")
        self.outputFirstConditional.setObjectName("outputFirstConditional")

        self.charHPCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charHPCheckbox.setGeometry(QtCore.QRect(200, 10, 70, 17))
        self.charHPCheckbox.setObjectName("charHPCheckbox")

        self.charClassCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charClassCheckbox.setGeometry(QtCore.QRect(20, 40, 101, 17))
        self.charClassCheckbox.setObjectName("charClassCheckbox")

        self.output = QtWidgets.QListWidget(characterManagerAdvancedView)
        self.output.setGeometry(QtCore.QRect(310, 10, 551, 391))
        self.output.setObjectName("output")

        self.andFirst = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.andFirst.setGeometry(QtCore.QRect(10, 280, 41, 17))
        self.andFirst.setObjectName("andFirst")

        self.orFirst = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.orFirst.setGeometry(QtCore.QRect(60, 280, 41, 17))
        self.orFirst.setObjectName("orFirst")

        self.firstButtonGroup = QtWidgets.QButtonGroup()
        self.firstButtonGroup.addButton(self.andFirst)
        self.firstButtonGroup.addButton(self.orFirst)

        self.andSecond = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.andSecond.setGeometry(QtCore.QRect(10, 350, 41, 17))
        self.andSecond.setObjectName("andSecond")

        self.orSecond = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.orSecond.setGeometry(QtCore.QRect(60, 350, 41, 17))
        self.orSecond.setObjectName("orSecond")

        self.secondButtonGroup = QtWidgets.QButtonGroup()
        self.secondButtonGroup.addButton(self.andSecond)
        self.secondButtonGroup.addButton(self.orSecond)

        self.outputSecondConditional = QtWidgets.QLineEdit(characterManagerAdvancedView)
        self.outputSecondConditional.setGeometry(QtCore.QRect(180, 310, 113, 20))
        self.outputSecondConditional.setStyleSheet("")
        self.outputSecondConditional.setObjectName("outputSecondConditional")

        self.charNameCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charNameCheckbox.setGeometry(QtCore.QRect(20, 10, 101, 17))
        self.charNameCheckbox.setObjectName("charNameCheckbox")

        self.conditionThirdConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.conditionThirdConditional.setGeometry(QtCore.QRect(130, 380, 41, 22))
        self.conditionThirdConditional.setStyleSheet(grey_background)
        self.conditionThirdConditional.setObjectName("conditionThirdConditional")
        self.conditionThirdConditional.addItem("")
        self.conditionThirdConditional.addItem("")
        self.conditionThirdConditional.addItem("")
        self.conditionThirdConditional.addItem("")
        self.conditionThirdConditional.addItem("")
        self.conditionThirdConditional.addItem("")

        self.conditionFirstConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.conditionFirstConditional.setGeometry(QtCore.QRect(130, 240, 41, 22))
        self.conditionFirstConditional.setStyleSheet(grey_background)
        self.conditionFirstConditional.setObjectName("conditionFirstConditional")
        self.conditionFirstConditional.addItem("")
        self.conditionFirstConditional.addItem("")
        self.conditionFirstConditional.addItem("")
        self.conditionFirstConditional.addItem("")
        self.conditionFirstConditional.addItem("")
        self.conditionFirstConditional.addItem("")

        self.outputThirdConditional = QtWidgets.QLineEdit(characterManagerAdvancedView)
        self.outputThirdConditional.setGeometry(QtCore.QRect(180, 380, 113, 20))
        self.outputThirdConditional.setStyleSheet("")
        self.outputThirdConditional.setObjectName("outputThirdConditional")

        self.charAttributeCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charAttributeCheckbox.setGeometry(QtCore.QRect(20, 70, 91, 17))
        self.charAttributeCheckbox.setObjectName("charAttributeCheckbox")

        self.searchButton = QtWidgets.QPushButton(characterManagerAdvancedView)
        self.searchButton.setGeometry(QtCore.QRect(10, 160, 271, 51))
        self.searchButton.setStyleSheet(grey_background)
        self.searchButton.setObjectName("searchButton")

        self.conditionSecondConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.conditionSecondConditional.setGeometry(QtCore.QRect(130, 310, 41, 22))
        self.conditionSecondConditional.setStyleSheet(grey_background)
        self.conditionSecondConditional.setObjectName("conditionSecondConditional")
        self.conditionSecondConditional.addItem("")
        self.conditionSecondConditional.addItem("")
        self.conditionSecondConditional.addItem("")
        self.conditionSecondConditional.addItem("")
        self.conditionSecondConditional.addItem("")
        self.conditionSecondConditional.addItem("")

        self.charMPCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charMPCheckbox.setGeometry(QtCore.QRect(200, 40, 91, 17))
        self.charMPCheckbox.setObjectName("charMPCheckbox")

        self.inputFirstConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.inputFirstConditional.setGeometry(QtCore.QRect(10, 240, 111, 22))
        self.inputFirstConditional.setStyleSheet(grey_background)
        self.inputFirstConditional.setObjectName("inputFirstConditional")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.setItemText(0, "")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")
        self.inputFirstConditional.addItem("")

        self.charEXPCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charEXPCheckbox.setGeometry(QtCore.QRect(200, 70, 91, 17))
        self.charEXPCheckbox.setObjectName("charEXPCheckbox")

        self.charServerCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charServerCheckbox.setGeometry(QtCore.QRect(20, 130, 91, 17))
        self.charServerCheckbox.setObjectName("charServerCheckbox")

        self.charMapCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charMapCheckbox.setGeometry(QtCore.QRect(200, 100, 91, 17))
        self.charMapCheckbox.setObjectName("charMapCheckbox")

        self.charInventoryCheckbox = QtWidgets.QCheckBox(characterManagerAdvancedView)
        self.charInventoryCheckbox.setGeometry(QtCore.QRect(200, 130, 91, 17))
        self.charInventoryCheckbox.setObjectName("charInventoryCheckbox")

        self.inputSecondConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.inputSecondConditional.setGeometry(QtCore.QRect(10, 310, 111, 22))
        self.inputSecondConditional.setStyleSheet(grey_background)
        self.inputSecondConditional.setObjectName("inputSecondConditional")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.setItemText(0, "")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        self.inputSecondConditional.addItem("")
        
        self.inputThirdConditional = QtWidgets.QComboBox(characterManagerAdvancedView)
        self.inputThirdConditional.setGeometry(QtCore.QRect(10, 380, 111, 22))
        self.inputThirdConditional.setStyleSheet(grey_background)
        self.inputThirdConditional.setObjectName("inputThirdConditional")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.setItemText(0, "")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")
        self.inputThirdConditional.addItem("")

        self.retranslateUi(characterManagerAdvancedView)
        QtCore.QMetaObject.connectSlotsByName(characterManagerAdvancedView)

    def retranslateUi(self, characterManagerAdvancedView):
        _translate = QtCore.QCoreApplication.translate
        characterManagerAdvancedView.setWindowTitle(_translate("characterManagerAdvancedView", "Maplestory Manager - View Character (Advanced)"))
        self.charLevelCheckbox.setText(_translate("characterManagerAdvancedView", "Level"))
        self.charHPCheckbox.setText(_translate("characterManagerAdvancedView", "HP"))
        self.charClassCheckbox.setText(_translate("characterManagerAdvancedView", "Character Class"))
        self.orFirst.setText(_translate("characterManagerAdvancedView", "OR"))
        self.charNameCheckbox.setText(_translate("characterManagerAdvancedView", "Character Name"))
        self.conditionThirdConditional.setItemText(0, _translate("characterManagerAdvancedView", "="))
        self.conditionThirdConditional.setItemText(1, _translate("characterManagerAdvancedView", "!="))
        self.conditionThirdConditional.setItemText(2, _translate("characterManagerAdvancedView", ">"))
        self.conditionThirdConditional.setItemText(3, _translate("characterManagerAdvancedView", ">="))
        self.conditionThirdConditional.setItemText(4, _translate("characterManagerAdvancedView", "<"))
        self.conditionThirdConditional.setItemText(5, _translate("characterManagerAdvancedView", "<="))
        self.orSecond.setText(_translate("characterManagerAdvancedView", "OR"))
        self.conditionFirstConditional.setItemText(0, _translate("characterManagerAdvancedView", "="))
        self.conditionFirstConditional.setItemText(1, _translate("characterManagerAdvancedView", "!="))
        self.conditionFirstConditional.setItemText(2, _translate("characterManagerAdvancedView", ">"))
        self.conditionFirstConditional.setItemText(3, _translate("characterManagerAdvancedView", ">="))
        self.conditionFirstConditional.setItemText(4, _translate("characterManagerAdvancedView", "<"))
        self.conditionFirstConditional.setItemText(5, _translate("characterManagerAdvancedView", "<="))
        self.andFirst.setText(_translate("characterManagerAdvancedView", "AND"))
        self.andSecond.setText(_translate("characterManagerAdvancedView", "AND"))
        self.charAttributeCheckbox.setText(_translate("characterManagerAdvancedView", "Main Attribute"))
        self.searchButton.setText(_translate("characterManagerAdvancedView", "Search"))
        self.conditionSecondConditional.setItemText(0, _translate("characterManagerAdvancedView", "="))
        self.conditionSecondConditional.setItemText(1, _translate("characterManagerAdvancedView", "!="))
        self.conditionSecondConditional.setItemText(2, _translate("characterManagerAdvancedView", ">"))
        self.conditionSecondConditional.setItemText(3, _translate("characterManagerAdvancedView", ">="))
        self.conditionSecondConditional.setItemText(4, _translate("characterManagerAdvancedView", "<"))
        self.conditionSecondConditional.setItemText(5, _translate("characterManagerAdvancedView", "<="))
        self.charMPCheckbox.setText(_translate("characterManagerAdvancedView", "MP"))
        self.inputFirstConditional.setItemText(1, _translate("characterManagerAdvancedView", "Username"))
        self.inputFirstConditional.setItemText(2, _translate("characterManagerAdvancedView", "Character Name"))
        self.inputFirstConditional.setItemText(3, _translate("characterManagerAdvancedView", "Character Class"))
        self.inputFirstConditional.setItemText(4, _translate("characterManagerAdvancedView", "Main Attribute"))
        self.inputFirstConditional.setItemText(5, _translate("characterManagerAdvancedView", "Level"))
        self.inputFirstConditional.setItemText(6, _translate("characterManagerAdvancedView", "Server"))
        self.inputFirstConditional.setItemText(7, _translate("characterManagerAdvancedView", "HP"))
        self.inputFirstConditional.setItemText(8, _translate("characterManagerAdvancedView", "MP"))
        self.inputFirstConditional.setItemText(9, _translate("characterManagerAdvancedView", "EXP"))
        self.inputFirstConditional.setItemText(10, _translate("characterManagerAdvancedView", "Map"))
        self.inputFirstConditional.setItemText(11, _translate("characterManagerAdvancedView", "Inventory"))
        self.charEXPCheckbox.setText(_translate("characterManagerAdvancedView", "EXP"))
        self.charServerCheckbox.setText(_translate("characterManagerAdvancedView", "Server"))
        self.charMapCheckbox.setText(_translate("characterManagerAdvancedView", "Map"))
        self.charInventoryCheckbox.setText(_translate("characterManagerAdvancedView", "Inventory"))
        self.inputSecondConditional.setItemText(1, _translate("characterManagerAdvancedView", "Username"))
        self.inputSecondConditional.setItemText(2, _translate("characterManagerAdvancedView", "Character Name"))
        self.inputSecondConditional.setItemText(3, _translate("characterManagerAdvancedView", "Character Class"))
        self.inputSecondConditional.setItemText(4, _translate("characterManagerAdvancedView", "Main Attribute"))
        self.inputSecondConditional.setItemText(5, _translate("characterManagerAdvancedView", "Level"))
        self.inputSecondConditional.setItemText(6, _translate("characterManagerAdvancedView", "Server"))
        self.inputSecondConditional.setItemText(7, _translate("characterManagerAdvancedView", "HP"))
        self.inputSecondConditional.setItemText(8, _translate("characterManagerAdvancedView", "MP"))
        self.inputSecondConditional.setItemText(9, _translate("characterManagerAdvancedView", "EXP"))
        self.inputSecondConditional.setItemText(10, _translate("characterManagerAdvancedView", "Map"))
        self.inputSecondConditional.setItemText(11, _translate("characterManagerAdvancedView", "Inventory"))
        self.inputThirdConditional.setItemText(1, _translate("characterManagerAdvancedView", "Username"))
        self.inputThirdConditional.setItemText(2, _translate("characterManagerAdvancedView", "Character Name"))
        self.inputThirdConditional.setItemText(3, _translate("characterManagerAdvancedView", "Character Class"))
        self.inputThirdConditional.setItemText(4, _translate("characterManagerAdvancedView", "Main Attribute"))
        self.inputThirdConditional.setItemText(5, _translate("characterManagerAdvancedView", "Level"))
        self.inputThirdConditional.setItemText(6, _translate("characterManagerAdvancedView", "Server"))
        self.inputThirdConditional.setItemText(7, _translate("characterManagerAdvancedView", "HP"))
        self.inputThirdConditional.setItemText(8, _translate("characterManagerAdvancedView", "MP"))
        self.inputThirdConditional.setItemText(9, _translate("characterManagerAdvancedView", "EXP"))
        self.inputThirdConditional.setItemText(10, _translate("characterManagerAdvancedView", "Map"))
        self.inputThirdConditional.setItemText(11, _translate("characterManagerAdvancedView", "Inventory"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    characterManagerAdvancedView = QtWidgets.QWidget()
    ui = Ui_characterManagerAdvancedView()
    ui.setupUi(characterManagerAdvancedView)
    characterManagerAdvancedView.show()
    sys.exit(app.exec_())
