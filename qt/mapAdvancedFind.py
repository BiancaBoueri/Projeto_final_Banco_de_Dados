# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mapAdvancedFind.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QSize
import Map
import alertBox

class Ui_mapAdvancedFind(object):

    def setupUi(self, mapAdvancedFind):
        mapAdvancedFind.setObjectName("mapAdvancedFind")
        mapAdvancedFind.resize(499, 181)
        mapAdvancedFind.setMinimumSize(QtCore.QSize(499, 181))
        mapAdvancedFind.setMaximumSize(QtCore.QSize(499, 181))
        mapAdvancedFind.setStyleSheet("background-color: rgb(255, 255, 255);")
        icon = QIcon()
        icon.addFile(u"images\maplestoryIcon.ico", QSize(), QIcon.Normal, QIcon.Off)
        mapAdvancedFind.setWindowIcon(icon)

        self.username = QtWidgets.QLineEdit(mapAdvancedFind)
        self.username.setGeometry(QtCore.QRect(30, 70, 113, 20))
        self.username.setText("")
        self.username.setObjectName("username")

        self.okButton = QtWidgets.QPushButton(mapAdvancedFind)
        self.okButton.setGeometry(QtCore.QRect(30, 140, 111, 31))
        self.okButton.setStyleSheet("background-color: rgb(245, 245, 245);")
        self.okButton.setObjectName("okButton")
        self.okButton.clicked.connect(lambda: self.parseInformation())

        self.output = QtWidgets.QTableWidget(mapAdvancedFind)
        self.output.setGeometry(QtCore.QRect(190, 10, 301, 161))
        self.output.setMinimumSize(QtCore.QSize(241, 151))
        self.output.setObjectName("output")

        self.showMapOnly = QtWidgets.QCheckBox(mapAdvancedFind)
        self.showMapOnly.setGeometry(QtCore.QRect(30, 110, 101, 17))
        self.showMapOnly.setObjectName("showMapOnly")
        
        self.label = QtWidgets.QLabel(mapAdvancedFind)
        self.label.setGeometry(QtCore.QRect(10, 10, 171, 41))
        self.label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.label.setObjectName("label")

        self.retranslateUi(mapAdvancedFind)
        QtCore.QMetaObject.connectSlotsByName(mapAdvancedFind)

    def retranslateUi(self, mapAdvancedFind):
        _translate = QtCore.QCoreApplication.translate
        mapAdvancedFind.setWindowTitle(_translate("mapAdvancedFind", "Maplestory Manager - Map (Advanced)"))
        self.username.setPlaceholderText(_translate("mapAdvancedFind", "Username"))
        self.okButton.setText(_translate("mapAdvancedFind", "OK"))
        self.showMapOnly.setText(_translate("mapAdvancedFind", "Show maps only"))
        self.label.setText(_translate("mapAdvancedFind", "<html><head/><body><p align=\"center\">Find in which map the characters </p><p align=\"center\">from a certain account are.</p></body></html>"))

    def parseInformation(self):
        showMapsOnly = self.showMapOnly.isChecked()

        try:
            if (showMapsOnly):
                numberOfRows = 2
                self.output.setColumnCount(numberOfRows)
                column1 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(0, column1)
                column2 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(1, column2)
                column1 = self.output.horizontalHeaderItem(0)
                column1.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Map ID"))
                column2 = self.output.horizontalHeaderItem(1)
                column2.setText(QtCore.QCoreApplication.translate("mapManager", "Map Name"))

            else:
                numberOfRows = 5
                self.output.setColumnCount(numberOfRows)
                column1 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(0, column1)
                column2 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(1, column2)
                column3 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(2, column3)
                column4 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(3, column4)
                column5 = QtWidgets.QTableWidgetItem()
                self.output.setHorizontalHeaderItem(4, column5)
                column1 = self.output.horizontalHeaderItem(0)
                column1.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Username"))
                column2 = self.output.horizontalHeaderItem(1)
                column2.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Char Name"))
                column3 = self.output.horizontalHeaderItem(2)
                column3.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Creation Date"))
                column4 = self.output.horizontalHeaderItem(3)
                column4.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Map ID"))
                column5 = self.output.horizontalHeaderItem(4)
                column5.setText(QtCore.QCoreApplication.translate("mapAdvancedFind", "Map Name"))

            result = Map.callProcedure(self.username.text(), showMapsOnly)

            if (len(result) > 0):
                self.output.setRowCount(len(result))
                for i in range(len(result)):
                    for j in range(0,numberOfRows):
                        self.output.setItem(i, j, QtWidgets.QTableWidgetItem(str(result[i][j])))

        except Exception as e:
            if (type(e) != TypeError):
                alertBox.AlertBox(e)
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mapAdvancedFind = QtWidgets.QWidget()
    ui = Ui_mapAdvancedFind()
    ui.setupUi(mapAdvancedFind)
    mapAdvancedFind.show()
    sys.exit(app.exec_())
